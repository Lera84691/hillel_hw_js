(()=>{"use strict";const e=JSON.parse('[{"type":"text","placeholder":"Enter text"},{"type":"number","minValue":0,"maxValue":100},{"type":"select","options":[{"value":1,"displayName":"One"},{"value":2,"displayName":"Two"},{"value":3,"displayName":"Three"}]}]'),t={text:new class{parse(e){return"text"===e.type||(console.error(`InputTextParser invoked for an item of type ${e.type}`),!1)}render(e){const t=document.createElement("input");return t.setAttribute("type","text"),e.placeholder&&t.setAttribute("placeholder",e.placeholder),t}},select:new class{parse(e){if("select"!==e.type)return console.error(`SelectParser invoked for an item of type ${e.type}`),!1;if(!e.options)return console.error("No options specified for a select element."),!1;for(const t of e.options)if(!t.value)return console.error("Missing value for one of the options."),!1;return!0}render(e){const t=document.createElement("select");for(const r of e.options){const e=document.createElement("option");e.setAttribute("value",r.value);const n=document.createTextNode(r.displayName||r.value);e.appendChild(n),t.appendChild(e)}return t}},number:new class{parse(e){return"number"===e.type||(console.error(`InputNumberParser invoked for an item of type ${e.type}`),!1)}render(e){const t=document.createElement("input");return t.setAttribute("type","number"),e.minValue&&t.setAttribute("minValue",e.minValue),e.maxValue&&t.setAttribute("maxValue",e.maxValue),t}}},r=new class{constructor(e,t){this.inputParsers=e||{}}parse(e){for(const t of e){if(!t.type)return console.error("An item without a type encountered."),!1;const e=this.inputParsers[t.type];if(!e)return console.error(`No parser for ${t.type} items found.`),!1;if(!e.parse(t))return!1}return!0}render(e){const t=document.createElement("form");for(const r of e){const e=this.inputParsers[r.type];t.appendChild(e.render(r))}return t}}(t);if(r.parse(e)){const t=r.render(e);document.body.appendChild(t)}})();